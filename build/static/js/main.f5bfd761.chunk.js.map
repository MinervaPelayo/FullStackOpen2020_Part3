{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Filter","props","value","filterName","onChange","handleFilter","PersonForm","onSubmit","addContact","newName","handleName","newNumber","handleNumber","type","Contacts","persons","map","person","key","name","number","onClick","handleDelete","ContactsFilter","filter","toLowerCase","indexOf","Persons","eraseContact","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterName","setMessage","setClassName","useEffect","contactService","initialContacts","event","target","preventDefault","includes","window","confirm","oldContact","contactObject","setTimeout","catch","error","returnedContact","concat","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5bfd761.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      <p>filter shown with</p>\r\n      <input value={props.filterName} onChange={props.handleFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addContact}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Contacts = (props) => {\r\n  return props.persons.map((person) => (\r\n    <div key={person.name}>\r\n      {person.name} {person.number}\r\n      <button onClick={()=> props.handleDelete(person)}>delete</button>\r\n    </div>\r\n  ));\r\n};\r\n\r\nconst ContactsFilter = (props) => {\r\n  return props.persons\r\n    .filter(\r\n      (person) =>\r\n        person.name.toLowerCase().indexOf(props.filterName.toLowerCase()) > -1\r\n    )\r\n    .map((person) => (\r\n      <div key={person.name}>\r\n        {person.name} {person.number}\r\n        <button onClick={props.handleDelete}>delete</button>\r\n      </div>\r\n    ));\r\n};\r\n\r\nconst Persons = (props) => {\r\n  return (\r\n    <div>\r\n      {props.filterName === \"\" ? (\r\n        <Contacts persons={props.persons} handleDelete={props.eraseContact}/>\r\n      ) : (\r\n        <ContactsFilter persons={props.persons} filterName={props.filterName} handleDelete={props.eraseContact} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n  }\r\n\r\nexport default { getAll, create, update, deleteContact };\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\"\nimport contactService from './services/contacts'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [className, setClassName] = useState(null);\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n  const eraseContact = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {     \n    contactService\n      .deleteContact(person.id)\n      .then(response => {\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n  }}\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const names = persons.map((person) => person.name);\n    if (names.includes(newName)) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if(result){\n        const oldContact =persons.filter((person) => person.name === newName);\n        const contactObject = {\n          name: newName,\n          number: newNumber,\n        };\n\n        contactService\n        .update(oldContact[0].id, contactObject)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== oldContact[0].id ? person : response));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setClassName(\"success\");\n          setMessage(\n            `Number of '${response.name}' was changed`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setClassName(\"error\");\n          setMessage(\n            `Information of '${oldContact[0].name}' has already been removed`\n          )\n          setPersons(persons.filter(person => person.id !== oldContact[0].id))\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n      }\n    } else {\n      const contactObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      contactService\n        .create(contactObject)\n        .then(returnedContact=> {\n          setPersons(persons.concat(returnedContact));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setClassName(\"success\");\n          setMessage(\n            `Added '${returnedContact.name}'`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={className} />\n      <Filter filterName={filterName} handleFilter={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        addContact={addContact}\n        newName={newName}\n        handleName={handleNameChange}\n        newNumber={newNumber}\n        handleNumber={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons filterName={filterName} persons={persons} eraseContact={eraseContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}